// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// stl_sort
NumericVector stl_sort(NumericVector x);
RcppExport SEXP _segMGarch_stl_sort(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(stl_sort(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_rev
NumericVector rcpp_rev(NumericVector x);
RcppExport SEXP _segMGarch_rcpp_rev(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_rev(x));
    return rcpp_result_gen;
END_RCPP
}
// func_coef
NumericMatrix func_coef(NumericMatrix z, int scale);
RcppExport SEXP _segMGarch_func_coef(SEXP zSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(func_coef(z, scale));
    return rcpp_result_gen;
END_RCPP
}
// func_input
NumericMatrix func_input(NumericMatrix coef, NumericMatrix sgn, bool sq, bool diag);
RcppExport SEXP _segMGarch_func_input(SEXP coefSEXP, SEXP sgnSEXP, SEXP sqSEXP, SEXP diagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coef(coefSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sgn(sgnSEXP);
    Rcpp::traits::input_parameter< bool >::type sq(sqSEXP);
    Rcpp::traits::input_parameter< bool >::type diag(diagSEXP);
    rcpp_result_gen = Rcpp::wrap(func_input(coef, sgn, sq, diag));
    return rcpp_result_gen;
END_RCPP
}
// func_dc
List func_dc(NumericMatrix z, double gamma);
RcppExport SEXP _segMGarch_func_dc(SEXP zSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(func_dc(z, gamma));
    return rcpp_result_gen;
END_RCPP
}
// func_cusum
List func_cusum(NumericMatrix z);
RcppExport SEXP _segMGarch_func_cusum(SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(func_cusum(z));
    return rcpp_result_gen;
END_RCPP
}
// func_cusum_vec
List func_cusum_vec(NumericVector z);
RcppExport SEXP _segMGarch_func_cusum_vec(SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(func_cusum_vec(z));
    return rcpp_result_gen;
END_RCPP
}
// func_dc_by
List func_dc_by(NumericMatrix z, double gamma, double dmby, double dtby);
RcppExport SEXP _segMGarch_func_dc_by(SEXP zSEXP, SEXP gammaSEXP, SEXP dmbySEXP, SEXP dtbySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type dmby(dmbySEXP);
    Rcpp::traits::input_parameter< double >::type dtby(dtbySEXP);
    rcpp_result_gen = Rcpp::wrap(func_dc_by(z, gamma, dmby, dtby));
    return rcpp_result_gen;
END_RCPP
}
// func_mvt_ar
NumericMatrix func_mvt_ar(NumericMatrix ar, NumericMatrix res);
RcppExport SEXP _segMGarch_func_mvt_ar(SEXP arSEXP, SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type ar(arSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(func_mvt_ar(ar, res));
    return rcpp_result_gen;
END_RCPP
}
// func_density
List func_density(NumericMatrix z, double c);
RcppExport SEXP _segMGarch_func_density(SEXP zSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(func_density(z, c));
    return rcpp_result_gen;
END_RCPP
}
// func_density_by
List func_density_by(NumericMatrix z, double dmby, double dtby, double c);
RcppExport SEXP _segMGarch_func_density_by(SEXP zSEXP, SEXP dmbySEXP, SEXP dtbySEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type z(zSEXP);
    Rcpp::traits::input_parameter< double >::type dmby(dmbySEXP);
    Rcpp::traits::input_parameter< double >::type dtby(dtbySEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(func_density_by(z, dmby, dtby, c));
    return rcpp_result_gen;
END_RCPP
}
// func_input_off
List func_input_off(NumericMatrix coef, NumericMatrix sgn, int log, int sq);
RcppExport SEXP _segMGarch_func_input_off(SEXP coefSEXP, SEXP sgnSEXP, SEXP logSEXP, SEXP sqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coef(coefSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sgn(sgnSEXP);
    Rcpp::traits::input_parameter< int >::type log(logSEXP);
    Rcpp::traits::input_parameter< int >::type sq(sqSEXP);
    rcpp_result_gen = Rcpp::wrap(func_input_off(coef, sgn, log, sq));
    return rcpp_result_gen;
END_RCPP
}
// func_input_on_boot
NumericMatrix func_input_on_boot(NumericMatrix coef, int log, int sq, NumericVector avg);
RcppExport SEXP _segMGarch_func_input_on_boot(SEXP coefSEXP, SEXP logSEXP, SEXP sqSEXP, SEXP avgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coef(coefSEXP);
    Rcpp::traits::input_parameter< int >::type log(logSEXP);
    Rcpp::traits::input_parameter< int >::type sq(sqSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg(avgSEXP);
    rcpp_result_gen = Rcpp::wrap(func_input_on_boot(coef, log, sq, avg));
    return rcpp_result_gen;
END_RCPP
}
// func_input_off_boot
NumericMatrix func_input_off_boot(NumericMatrix coef, NumericMatrix sgn, int log, int sq, NumericVector avg);
RcppExport SEXP _segMGarch_func_input_off_boot(SEXP coefSEXP, SEXP sgnSEXP, SEXP logSEXP, SEXP sqSEXP, SEXP avgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type coef(coefSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sgn(sgnSEXP);
    Rcpp::traits::input_parameter< int >::type log(logSEXP);
    Rcpp::traits::input_parameter< int >::type sq(sqSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg(avgSEXP);
    rcpp_result_gen = Rcpp::wrap(func_input_off_boot(coef, sgn, log, sq, avg));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_segMGarch_stl_sort", (DL_FUNC) &_segMGarch_stl_sort, 1},
    {"_segMGarch_rcpp_rev", (DL_FUNC) &_segMGarch_rcpp_rev, 1},
    {"_segMGarch_func_coef", (DL_FUNC) &_segMGarch_func_coef, 2},
    {"_segMGarch_func_input", (DL_FUNC) &_segMGarch_func_input, 4},
    {"_segMGarch_func_dc", (DL_FUNC) &_segMGarch_func_dc, 2},
    {"_segMGarch_func_cusum", (DL_FUNC) &_segMGarch_func_cusum, 1},
    {"_segMGarch_func_cusum_vec", (DL_FUNC) &_segMGarch_func_cusum_vec, 1},
    {"_segMGarch_func_dc_by", (DL_FUNC) &_segMGarch_func_dc_by, 4},
    {"_segMGarch_func_mvt_ar", (DL_FUNC) &_segMGarch_func_mvt_ar, 2},
    {"_segMGarch_func_density", (DL_FUNC) &_segMGarch_func_density, 2},
    {"_segMGarch_func_density_by", (DL_FUNC) &_segMGarch_func_density_by, 4},
    {"_segMGarch_func_input_off", (DL_FUNC) &_segMGarch_func_input_off, 4},
    {"_segMGarch_func_input_on_boot", (DL_FUNC) &_segMGarch_func_input_on_boot, 4},
    {"_segMGarch_func_input_off_boot", (DL_FUNC) &_segMGarch_func_input_off_boot, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_segMGarch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
